@page "/job/add"
@using placement_cell_final.Client.ClassModels;
@using placement_cell_final.Shared.ModelsDTO;
@inject HttpClient HttpClient

<div class=" flex items-center justify-center pt-10 w-full">
    <EditForm Model="@PlacementObj" OnValidSubmit="@SubmitForm" class="max-w-3xl w-full p-10 shadow-md mb-5">
        <h3 class="font-bold text-2xl pb-3">Add Placement</h3>
        <div class="mb-4">
            <label for="title" class="block text-gray-700 text-sm font-bold mb-2">Title</label>
            <InputText type="text" id="title"
                       class="w-full border rounded py-2 px-3 leading-tight focus:outline-none focus:shadow-outline"
                       @bind-Value="@PlacementObj.Title" />
        </div>


        <div class="mb-4">
            <label for="title" class="block text-gray-700 text-sm font-bold mb-2">Company Name</label>
            <InputText type="text" id="title"
                       class="w-full border rounded py-2 px-3 leading-tight focus:outline-none focus:shadow-outline"
                       @bind-Value="@PlacementObj.CompanyName" />
        </div>


        <div class="mb-4">
            <label for="title" class="block text-gray-700 text-sm font-bold mb-2">Location</label>
            <InputText type="text" id="title"
                       class="w-full border rounded py-2 px-3 leading-tight focus:outline-none focus:shadow-outline"
                       @bind-Value="@PlacementObj.Location" />
        </div>

        <div class="mb-4">
            <label for="description" class="block text-gray-700 text-sm font-bold mb-2">Description</label>
            <InputTextArea @bind-Value="@PlacementObj.Description" id="description"
                           class="min-h-36 max-h-72 w-full border rounded py-2 px-3 leading-tight focus:outline-none focus:shadow-outline ">
            </InputTextArea>
        </div>

        <button type="submit"
                class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
            Create
        </button>
    </EditForm>
</div>



@code {
    public PlacementDTO PlacementObj = new PlacementDTO();

    public async void SubmitForm()
    {
        var response = await HttpClient.PostAsJsonAsync(Statics.BaseApiAddress + "/api/placements", PlacementObj);
        PlacementObj = new PlacementDTO();
        StateHasChanged();

        if (response.IsSuccessStatusCode)
        {
            // Successful response, handle as needed
            Console.WriteLine($"User added successfully! {PlacementObj.Description}, {PlacementObj.Title} ");
        }
        else
        {
            // Handle error response
            Console.WriteLine($"Error: {response.StatusCode}");
        }
    }
}